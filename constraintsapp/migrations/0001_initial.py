# Generated by Django 5.2.5 on 2025-08-10 15:29

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('people', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminRule',
            fields=[
                ('admin_rule_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rule_type', models.CharField(choices=[('maxclassesperday', 'maxclassesperday'), ('room_closed', 'room_closed'), ('term_limit', 'term_limit'), ('custom', 'custom')], max_length=32)),
                ('parameter', models.JSONField(default=dict)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.room')),
                ('slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.timeslot')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.tenant')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('room__isnull', True), ('slot__isnull', True), _negated=True), name='adminrule_has_scope')],
            },
        ),
        migrations.CreateModel(
            name='BlockedSlot',
            fields=[
                ('blocked_slot_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.TextField()),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.room')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.timeslot')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'slot', 'room')},
            },
        ),
        migrations.CreateModel(
            name='ProfessorAvailability',
            fields=[
                ('availability_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('available', models.BooleanField()),
                ('prof', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.instructor')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.timeslot')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'prof', 'slot')},
            },
        ),
        migrations.CreateModel(
            name='StudentPreference',
            fields=[
                ('preference_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preference_score', models.SmallIntegerField()),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.course')),
                ('slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.timeslot')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.student')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.tenant')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('course__isnull', False), ('slot__isnull', True)), models.Q(('course__isnull', True), ('slot__isnull', False)), _connector='OR'), name='pref_course_xor_slot')],
            },
        ),
    ]
