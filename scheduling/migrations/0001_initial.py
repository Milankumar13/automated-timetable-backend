# Generated by Django 5.2.5 on 2025-08-24 20:00

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('people', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassPlan',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='ACTIVE', max_length=16)),
                ('note', models.TextField(blank=True, null=True)),
                (
                    'department',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_plans',
                        to='catalog.department',
                    ),
                ),
                (
                    'professor',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_plans',
                        to='people.professor',
                    ),
                ),
                (
                    'room',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_plans',
                        to='catalog.room',
                    ),
                ),
                (
                    'subject',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_plans',
                        to='catalog.subject',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'constraints': [
                    models.CheckConstraint(
                        condition=models.Q(('end_date__gte', models.F('start_date'))),
                        name='semester_end_after_start',
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'dow',
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, 'Mon'),
                            (2, 'Tue'),
                            (3, 'Wed'),
                            (4, 'Thu'),
                            (5, 'Fri'),
                            (6, 'Sat'),
                            (7, 'Sun'),
                        ]
                    ),
                ),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_official', models.BooleanField(default=True)),
                (
                    'semester',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='slots',
                        to='scheduling.semester',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='RoomSlotBlock',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reason', models.TextField(blank=True, null=True)),
                (
                    'room',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='blocked_slots',
                        to='catalog.room',
                    ),
                ),
                (
                    'slot',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='room_blocks',
                        to='scheduling.slot',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ProfAvailability',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('available', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True, null=True)),
                (
                    'professor',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='availabilities',
                        to='people.professor',
                    ),
                ),
                (
                    'slot',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='prof_availabilities',
                        to='scheduling.slot',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_date', models.DateField()),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('PLANNED', 'PLANNED'),
                            ('CANCELLED', 'CANCELLED'),
                            ('RESCHEDULED', 'RESCHEDULED'),
                            ('EXTRA', 'EXTRA'),
                            ('COMPLETED', 'COMPLETED'),
                        ],
                        default='PLANNED',
                        max_length=16,
                    ),
                ),
                ('change_reason', models.TextField(blank=True, null=True)),
                (
                    'plan',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='sessions',
                        to='scheduling.classplan',
                    ),
                ),
                (
                    'professor',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_sessions',
                        to='people.professor',
                    ),
                ),
                (
                    'replaces_session',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='replacement_sessions',
                        to='scheduling.classsession',
                    ),
                ),
                (
                    'room',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_sessions',
                        to='catalog.room',
                    ),
                ),
                (
                    'subject',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_sessions',
                        to='catalog.subject',
                    ),
                ),
                (
                    'semester',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_sessions',
                        to='scheduling.semester',
                    ),
                ),
                (
                    'slot',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='class_sessions',
                        to='scheduling.slot',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='classplan',
            name='slot',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                related_name='class_plans',
                to='scheduling.slot',
            ),
        ),
        migrations.AddConstraint(
            model_name='slot',
            constraint=models.CheckConstraint(
                condition=models.Q(('end_time__gt', models.F('start_time'))),
                name='slot_end_after_start',
            ),
        ),
        migrations.AlterUniqueTogether(
            name='slot',
            unique_together={('semester', 'dow', 'start_time', 'end_time')},
        ),
        migrations.AlterUniqueTogether(
            name='roomslotblock',
            unique_together={('room', 'slot')},
        ),
        migrations.AlterUniqueTogether(
            name='profavailability',
            unique_together={('professor', 'slot')},
        ),
        migrations.AddIndex(
            model_name='classsession',
            index=models.Index(
                fields=['day_date', 'slot'], name='scheduling__day_dat_534c11_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='classsession',
            index=models.Index(fields=['status'], name='scheduling__status_e975c2_idx'),
        ),
        migrations.AddConstraint(
            model_name='classsession',
            constraint=models.UniqueConstraint(
                fields=('day_date', 'slot', 'room'), name='uniq_session_room_on_date_slot'
            ),
        ),
        migrations.AddConstraint(
            model_name='classsession',
            constraint=models.UniqueConstraint(
                fields=('day_date', 'slot', 'professor'), name='uniq_session_prof_on_date_slot'
            ),
        ),
        migrations.AddIndex(
            model_name='classplan',
            index=models.Index(fields=['slot', 'room'], name='scheduling__slot_id_e1b0d6_idx'),
        ),
        migrations.AddIndex(
            model_name='classplan',
            index=models.Index(
                fields=['slot', 'professor'], name='scheduling__slot_id_4378ab_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='classplan',
            index=models.Index(fields=['department'], name='scheduling__departm_0425a1_idx'),
        ),
        migrations.AddConstraint(
            model_name='classplan',
            constraint=models.UniqueConstraint(
                fields=('slot', 'room'), name='uniq_plan_room_per_slot'
            ),
        ),
        migrations.AddConstraint(
            model_name='classplan',
            constraint=models.UniqueConstraint(
                fields=('slot', 'professor'), name='uniq_plan_prof_per_slot'
            ),
        ),
    ]
